# SPDX-FileCopyrightText:  PyPSA-Earth and PyPSA-Eur Authors
#
# SPDX-License-Identifier: CC0-1.0

results_dir: results/
summary_dir: results/

foresight: overnight # TODO: csp, myopic, monte carlo in szenario A zeigen


countries: ["EG"]
# TODO per country: Insert country you want to model "EG", "NA", "MA", "ZA", "KE", "ET", "CG", "TZ", "GH", "TN", "NG"
# Can be replaced by country ["NG", "BJ"], continent ["Africa"] or user-specific region, see more at https://pypsa-earth.readthedocs.io/en/latest/configuration.html#top-level-configuration

enable:
  retrieve_databundle: true #  Recommended 'true', for the first run. Otherwise data might be missing.
  retrieve_databundle_sector: true
  retrieve_cost_data: true # true: retrieves cost data from technology data and saves in resources/costs.csv, false: uses cost data in data/costs.csv
  download_osm_data: true # If 'true', OpenStreetMap data will be downloaded for the above given countries
  build_natura_raster: false # If True, then an exclusion raster will be build
  build_cutout: false
  # If "build_cutout" : true, then environmental data is extracted according to `snapshots` date range and `countries`
  # requires cds API key https://cds.climate.copernicus.eu/api-how-to
  # More information https://atlite.readthedocs.io/en/latest/introduction.html#datasets
  progress_bar: true # show progress bar during downloading routines and other long-running tasks


custom_rules: [] # Default empty [] or link to custom rule file e.g. ["my_folder/my_rules.smk"] that add rules to Snakefile

run:
  name: "H2G_A_EG_2035" # use this to keep track of runs with different settings
  # TODO per country: H2G_<A/B><Iteration>_<Country Code> - Bsp: H2G_A1_ZA
  sector_name: "H2G_A_EG_2035" # use this to keep track of sector scenario runs
  # TODO per country: H2G_<A/B><Iteration>_<Country Code> - Bsp: H2G_A1_ZA
  shared_cutouts: true # set to true to share the default cutout(s) across runs
  # Note: value false requires build_cutout to be enabled
  allow_scenario_failure: false # If True, the workflow will continue even if a scenario in run_scnenario fails

scenario:
  simpl: [""]
  ll: ["copt"]
  clusters: [10]
  opts: [
    Co2L0.59, 
    # Co2L0.24
    ] # Co2L0.24 TODO per country: adjust factor (e.g. Co2L0.8 for 2035) and co2base (see below) per country and planning_horizon based on excel file
  planning_horizons: # investment years for myopic and perfect; or costs year for overnight
  - 2035
  # - 2050
  sopts:
  - "3H"
  demand:
  - "NZ"


augmented_line_connection:
  add_to_snakefile: false # If True, includes this rule to the workflow
  new_line_type: ["HVAC", "HVDC"] # Expanded lines can be either ["HVAC"] or ["HVDC"] or both ["HVAC", "HVDC"]
  
cluster_options:
  simplify_network:
    remove_stubs_across_borders: true
  s_threshold_fetch_isolated: 0.05 # [-] a share of the national load for merging an isolated network into a backbone network
  alternative_clustering: true # "False" use Voronoi shapes, "True" use GADM shapes

load_options:
  ssp: "ssp2-2.6" # shared socio-economic pathway (GDP and population growth) scenario to consider
  weather_year: 2013 # Load scenarios available with different weather year (different renewable potentials)
  prediction_year: 2030 # Load scenarios available with different prediction year (GDP, population) # TODO: adjust per planning horizon
  scale: 1 # scales all load time-series, i.e. 2 = doubles load

electricity:
  co2base: 252.55e+6 # TODO per country: adjust using excel file and value for 2015 based on https://edgar.jrc.ec.europa.eu/dataset_ghg2024.
  agg_p_nom_limits: data/agg_p_nom_minmax.csv

costs:
  year: 2030
  version: v0.11.0
  discountrate: [0.082] #, 0.086, 0.071] --> https://www.irena.org/-/media/Files/IRENA/Agency/Publication/2023/May/IRENA_The_cost_of_financing_renewable_power_2023.pdf
  # [EUR/USD] ECB: https://www.ecb.europa.eu/stats/exchange/eurofxref/html/eurofxref-graph-usd.en.html # noqa: E501
  USD2013_to_EUR2013: 0.7532 # [EUR/USD] ECB: https://www.ecb.europa.eu/stats/exchange/eurofxref/html/eurofxref-graph-usd.en.html

# ------------------- SECTOR OPTIONS -------------------

policy_config:
# TODO: use h2_hourly_matching in the future. (RED III)
  hydrogen:
    temporal_matching: "no_res_matching" # either "h2_yearly_matching", "no_res_matching", "no_res_matching"
    spatial_matching: false
    additionality: false # RE electricity is equal to the amount required for additional hydrogen export compared to the 0 export case ("reference_case")
    allowed_excess: 1.0
    is_reference: false # Whether or not this network is a reference case network, relevant only if additionality is _true_
    remove_h2_load: false #Whether or not to remove the h2 load from the network, relevant only if is_reference is _true_
    path_to_ref: "" # Path to the reference case network for additionality calculation, relevant only if additionality is _true_ and is_reference is _false_
    re_country_load: false # Set to "True" to force the RE electricity to be equal to the electricity required for hydrogen export and the country electricity load. "False" excludes the country electricity load from the constraint.

demand_data:
  update_data: true # if true, the workflow downloads the energy balances data saved in data/demand/unsd/data again. Turn on for the first run.
  base_year: 2019

  other_industries: false # Whether or not to include industries that are not specified. some countries have has exaggerated numbers, check carefully.
  aluminium_year: 2019 # Year of the aluminium demand data specified in `data/AL_production.csv`

fossil_reserves:
  oil: 0 # NB: fossil_reserves are implemented as store with e_initial, which may lead to unwanted fuel export in edge cases

# TODO: as soon as green multi-carrier export is included - discuss it again.
export:
  endogenous: false # If true, the export demand is endogenously determined by the model
  endogenous_price: 400 # EUR/MWh # Market price, for wich the hydrogen for endogenous exports is sold. Only considered, if ["export"]["endogenous"] is set to true.
  store: true # [True, False] # specifies whether an export store to balance demand is implemented
  store_capital_costs: "no_costs" # ["standard_costs", "no_costs"] # specifies the costs of the export store. "standard_costs" takes CAPEX of "hydrogen storage tank type 1 including compressor"
  h2export: [
    3.33, 13.33, 23.33, 
    # 23.33, 78.33, 133.32
    ] # Yearly export demand in TWh. Only considered, if ["export"]["endogenous"] is set to false
  # Assumptions: Africas market-based export potential (shipped and piped) is 4 to 10 MtH2 by 2035 and 35(6) to 50 MtH2 via different products by 2050. (cf. Deloitte2023, HydrogenCouncil2024, HydrogenCouncil2022, IRENA2023) 
  # 0.1 Mtpa: 3.33 TWh/a and about 1GW of electrolyser capacity as a lower bound for 2035.
  # 0.4 Mtpa: 13.33 TWh/a and about 3GW of electrolyser capacity as a lower bound for 2035.
  # 0.7, 23.33 TWh/a, assuming an equal distribution of 7MtH2 export across 10 countries of Africa by 2035.
  # 2035: [3.33, 13.33, 23.33] (0.1, 0.4, 0.7 Mtpa)
  # 2050: [23.33, 78.33, 133.32] (0.7, 2.35, 4.0 Mtpa)
  export_profile: "constant" # use "ship" or "constant". Only considered, if ["export"]["endogenous"] is set to false
  ship:
    ship_capacity: 0.4 # TWh # 0.05 TWh for new ones, 0.003 TWh for Susio Frontier, 0.4 TWh according to Hampp2021: "Corresponds to 11360 t H2 (l) with LHV of 33.3333 Mwh/t_H2. Cihlar et al 2020 based on IEA 2019, Table 3-B"
    travel_time: 288 # hours # From Agadir to Rotterdam and back (12*24)
    fill_time: 24 # hours, for 48h see Hampp2021
    unload_time: 24 # hours for 48h see Hampp2021

custom_data:
  renewables: [] # ['csp', 'rooftop-solar', 'solar']
  elec_demand: false
  heat_demand: false
  industry_demand: false
  industry_database: false
  transport_demand: false
  water_costs: false
  h2_underground: false
  add_existing: false
  custom_sectors: false
  gas_network: false # If "True" then a custom .csv file must be placed in "resources/custom_data/pipelines.csv" , If "False" the user can choose btw "greenfield" or Model built-in datasets. Please refer to ["sector"] below.
  export_ports: false # If "True" then a custom .csv file must be placed in "data/custom/export_ports.csv"
  airports: false # If "True" then a custom .csv file must be placed in "data/custom/airports.csv". Data format for aiports must be in the format of the airports.csv file in the data folder.

industry:
  reference_year: 2015

sector:
  gas:
    spatial_gas: true # ALWAYS TRUE
    network: false # ALWAYS FALSE for now (NOT USED)
    network_data: GGIT # Global dataset -> 'GGIT' , European dataset -> 'IGGIELGN'
    network_data_GGIT_status: ["Construction", "Operating", "Idle", "Shelved", "Mothballed", "Proposed"]
  hydrogen:
    network: true
    H2_retrofit_capacity_per_CH4: 0.6
    network_limit: 10000 #GWkm 
    network_routes: greenfield # "gas or "greenfield". If "gas"  ->  the network data are fetched from ["sector"]["gas"]["network_data"]. If "greenfield"  -> the network follows the topology of electrical transmission lines
    gas_network_repurposing: false # If true -> ["sector"]["gas"]["network"] is automatically false
    underground_storage: false
    hydrogen_colors: false
    set_color_shares: false
    blue_share: 0.40
    pink_share: 0.05
  coal:
    spatial_coal: true
    shift_to_elec: true # If true, residential and services demand of coal is shifted to electricity. If false, the final energy demand of coal is disregarded
  lignite:
    spatial_lignite: false

  international_bunkers: true #Whether or not to count the emissions of international aviation and navigation

  oil:
    spatial_oil: true

  district_heating:
    potential: 0.2 #maximum fraction of urban demand which can be supplied by district heating
    #increase of today's district heating demand to potential maximum district heating share
    #progress = 0 means today's district heating share, progress=-1 means maximum fraction of urban demand is supplied by district heating
    progress:
      2030: 0.3
      2035: 0.3
      2040: 0.6
      2050: 1.0
    district_heating_loss: 0.15
  reduce_space_heat_exogenously: true # reduces space heat demand by a given factor (applied before losses in DH)
  # this can represent e.g. building renovation, building demolition, or if
  # the factor is negative: increasing floor area, increased thermal comfort, population growth
  reduce_space_heat_exogenously_factor: # per unit reduction in space heat demand
  # the default factors are determined by the LTS scenario from http://tool.european-calculator.eu/app/buildings/building-types-area/?levers=1ddd4444421213bdbbbddd44444ffffff11f411111221111211l212221
    2020: 0.10  # this results in a space heat demand reduction of 10%
    2025: 0.09  # first heat demand increases compared to 2020 because of larger floor area per capita
    2030: 0.09
    2035: 0.11
    2040: 0.16
    2045: 0.21
    2050: 0.29

  v2g: false #allows feed-in to grid from EV battery 
  bev_dsm: true #turns on EV battery
  bev_energy: 0.05 #average battery size in MWh
  bev_availability: 0.5 #How many cars do smart charging


  biomass_transport: true # biomass transport between nodes
  biomass_transport_default_cost: 0.1 #EUR/km/MWh
  solid_biomass_potential: 150 # 47.6 # TWh/a, Potential of whole modelled area 
  # TODO per country: conservative assumptions is to take 97% of biofuel/bioenergy from https://unstats.un.org/unsd/energystats/dataPortal/, divide value by 3600 TJ/TWh
  biogas_potential: 1.4 # TWh/a, Potential of whole modelled area 
  # TODO per country: conservative assumptions is to take 3% of biofuel/bioenergy from https://unstats.un.org/unsd/energystats/dataPortal/, divide value by 3600 TJ/TWh

  electricity_distribution_grid: false # adds low voltage buses and shifts AC loads, BEVs, heat pumps, and resistive heaters, micro CHPs to low voltage buses if technologies are present
  solar_rooftop: false # adds distribution side customer rooftop PV (only work if electricity_distribution_grid: true)
  home_battery: false # adds home batteries to low voltage buses ((only work if electricity_distribution_grid: true)

  land_transport_fuel_cell_share: # 1 means all FCEVs HERE
  # https://www.iea.org/reports/road-transport#dashboard. Slightly lower values compared to global average.
  # TODO per country: Double check for next iterations
  # land transport includes road and rail. 
  # Consider share of rail transport and country-specific issues with overhead electricity lines for rail system --> larger H2 share
    AB_2030: 0.00
    NZ_2030: 0.00
    AB_2035: 0.01
    NZ_2035: 0.02
    AB_2050: 0.08
    NZ_2050: 0.12

  land_transport_electric_share: # 1 means all EVs  # This leads to problems when non-zero HERE
    AB_2030: 0.03
    NZ_2030: 0.05
    AB_2035: 0.08
    NZ_2035: 0.12
    AB_2050: 0.45
    NZ_2050: 0.68

  co2_network: true
  co2_sequestration_potential: 150 # 0 #MtCO2/a sequestration potential for Europe 
  co2_sequestration_cost: 10 #EUR/tCO2 for sequestration of CO2
  shipping_hydrogen_liquefaction: false
  shipping_average_efficiency: 0.4 #For conversion of fuel oil to propulsion in 2011

  # TODO: Double check for future iterations
  # https://www.iea.org/reports/aviation-and-shipping#dashboard --> we choose lower values compared to IEA because methanol ships are currently ordnered instead of ammonia ships.
  # Share of hydrogen or hydrogen-equivalents of ammonia shipping. Might depend on country and routes.
  # Fischer-tropsch based shipping e-fuel share is result of optimisation and co2limit. Co2L must consider international shipping emissions. --> to be discussed.
  shipping_hydrogen_share: #1.0
    AB_2030: 0.02
    NZ_2030: 0.05
    AB_2035: 0.05
    NZ_2035: 0.10
    AB_2050: 0.25
    NZ_2050: 0.35

  #gadm_level: 1
  h2_cavern: true
  marginal_cost_storage: 0
  methanation: true
  helmeth: false
  dac: true
  SMR: false
  SMR CC: false
  cc_fraction: 0.9
  cc: true
  space_heat_share: 0.6 # the share of space heating from all heating. Remainder goes to water heating. # TODO: Double check for next iterations. Space heat share is often lower or equal to water heating, but space heat+cooling is significant 60% 
  airport_sizing_factor: 3

  min_part_load_fischer_tropsch: 0

  conventional_generation: # generator : carrier
    OCGT: gas
    CCGT: gas
    oil: oil
    coal: coal
    lignite: lignite
    biomass: biomass
  keep_existing_capacities: true


solving:
  solver:
    name: gurobi
    options: gurobi-default

  solver_options:
    gurobi-default:
      threads: 16
      method: 2 # barrier
      crossover: 0
      BarConvTol: 1.e-6
      OptimalityTol: 1.e-6
      Seed: 123
      AggFill: 0
      PreDual: 0
      GURO_PAR_BARDENSETHRESH: 200
      BarHomogeneous: 1
      BarOrder: 0
    gurobi-numeric-focus:
      NumericFocus: 3 # Favour numeric stability over speed
      method: 2 # barrier
      crossover: 0 # do not use crossover
      BarHomogeneous: 1 # Use homogeneous barrier if standard does not converge
      BarConvTol: 1.e-5
      FeasibilityTol: 1.e-4
      OptimalityTol: 1.e-4
      ObjScale: -0.5
      threads: 8
      Seed: 123
    gurobi-fallback: # Use gurobi defaults
      crossover: 0
      method: 2 # barrier
      BarHomogeneous: 1 # Use homogeneous barrier if standard does not converge
      BarConvTol: 1.e-5
      FeasibilityTol: 1.e-5
      OptimalityTol: 1.e-5
      Seed: 123
      threads: 8

  mem: 30000 #memory in MB; 20 GB enough for 50+B+I+H2; 100 GB for 181+B+I+H2
